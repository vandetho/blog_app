name: Testing the workflow component
on: push

jobs:
    symfony:
        name: Testing the workflow component
        environment: ci
        runs-on: ubuntu-latest
        services:
            mysql:
                image: mysql:latest
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: false
                    MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
                    MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}_test
                ports:
                    - 3306:3306
                options: >-
                    --health-cmd="mysqladmin ping"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=3
        strategy:
            fail-fast: false
            matrix:
                php-versions: [ '8.2' ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-versions }}
                    tools: phpunit-bridge
                    extensions: mbstring, xml, ctype, iconv, intl, mysql, imagick, curl, dom, gd, json, pdo, zip
                    coverage: xdebug
            -   name: Get composer cache directory
                id: composer-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            -   name: Cache composer dependencies
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

            -   name: Install Composer dependencies And Application
                run: |
                    composer install
                env:
                    DATABASE_URL: "mysql://root:${{ secrets.MYSQL_ROOT_PASSWORD }}@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/${{ secrets.MYSQL_DATABASE }}"
